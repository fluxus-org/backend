{"prompt": "Retrieve the BMI category for children and youth from the Body Measures table.", "completion": "SELECT BMDBMIC FROM P_BMX;"}
{"prompt": "Find the status code for body measures exams in the Body Measures table.", "completion": "SELECT BMDSTATS FROM P_BMX;"}
{"prompt": "List the arm circumference comments from the Body Measures table.", "completion": "SELECT BMIARMC FROM P_BMX;"}
{"prompt": "Retrieve the upper arm length comments from the Body Measures table.", "completion": "SELECT BMIARML FROM P_BMX;"}
{"prompt": "Get the head circumference comments from the Body Measures table.", "completion": "SELECT BMIHEAD FROM P_BMX;"}
{"prompt": "Retrieve the hip circumference comments from the Body Measures table.", "completion": "SELECT BMIHIP FROM P_BMX;"}
{"prompt": "Fetch the standing height comments from the Body Measures table.", "completion": "SELECT BMIHT FROM P_BMX;"}
{"prompt": "Retrieve the upper leg length comments from the Body Measures table.", "completion": "SELECT BMILEG FROM P_BMX;"}
{"prompt": "Get the recumbent length comments from the Body Measures table.", "completion": "SELECT BMIRECUM FROM P_BMX;"}
{"prompt": "List the waist circumference comments from the Body Measures table.", "completion": "SELECT BMIWAIST FROM P_BMX;"}
{"prompt": "Fetch the weight comments from the Body Measures table.", "completion": "SELECT BMIWT FROM P_BMX;"}
{"prompt": "Retrieve arm circumference values from the Body Measures table.", "completion": "SELECT BMXARMC FROM P_BMX;"}
{"prompt": "Get upper arm length values from the Body Measures table.", "completion": "SELECT BMXARML FROM P_BMX;"}
{"prompt": "Find Body Mass Index (BMI) values from the Body Measures table.", "completion": "SELECT BMXBMI FROM P_BMX;"}
{"prompt": "Retrieve head circumference values from the Body Measures table.", "completion": "SELECT BMXHEAD FROM P_BMX;"}
{"prompt": "Fetch hip circumference values from the Body Measures table.", "completion": "SELECT BMXHIP FROM P_BMX;"}
{"prompt": "List standing height values from the Body Measures table.", "completion": "SELECT BMXHT FROM P_BMX;"}
{"prompt": "Retrieve upper leg length values from the Body Measures table.", "completion": "SELECT BMXLEG FROM P_BMX;"}
{"prompt": "Get recumbent length values from the Body Measures table.", "completion": "SELECT BMXRECUM FROM P_BMX;"}
{"prompt": "Fetch waist circumference values from the Body Measures table.", "completion": "SELECT BMXWAIST FROM P_BMX;"}
{"prompt": "Retrieve weight values from the Body Measures table.", "completion": "SELECT BMXWT FROM P_BMX;"}
{"prompt": "Find respondent sequence numbers from the Body Measures table.", "completion": "SELECT SEQN FROM P_BMX;"}
{"prompt": "Calculate the average BMI for children and youth from the Body Measures table.", "completion": "SELECT AVG(BMXBMI) FROM P_BMX WHERE BMDSTATS = '1';"}
{"prompt": "Retrieve the maximum arm circumference value from the Body Measures table.", "completion": "SELECT MAX(BMXARMC) FROM P_BMX WHERE BMDSTATS = '1';"}
{"prompt": "Find the number of records with missing head circumference data in the Body Measures table.", "completion": "SELECT COUNT(*) FROM P_BMX WHERE BMIHEAD = '.';"}
{"prompt": "List unique BMI categories for children and youth from the Body Measures table.", "completion": "SELECT DISTINCT BMDBMIC FROM P_BMX WHERE BMDSTATS = '1';"}
{"prompt": "Retrieve the average BMI for patients who have both weight and height data available in the Body Measures table.", "completion": "SELECT AVG(BMXBMI) FROM P_BMX WHERE BMXWT IS NOT NULL AND BMXHT IS NOT NULL;"}
{"prompt": "Find the top 5 patients with the highest BMI values from the Body Measures table.", "completion": "SELECT SEQN, BMXBMI FROM P_BMX ORDER BY BMXBMI DESC LIMIT 5;"}
{"prompt": "List patients who have abnormal arm circumference values in the Body Measures table. Abnormal values are those outside the range [20, 40] cm.", "completion": "SELECT SEQN, BMXARMC FROM P_BMX WHERE BMXARMC < 20 OR BMXARMC > 40;"}
{"prompt": "Retrieve patients' names and BMIs from the Demographics and Body Measures tables for patients aged 30 or older.", "completion": "SELECT P_DEMO.name, P_BMX.BMXBMI FROM P_DEMO JOIN P_BMX ON P_DEMO.SEQN = P_BMX.SEQN WHERE P_DEMO.age >= 30;"}
{"prompt": "Find the number of patients who have data for all body measures (height, weight, head circumference, etc.) available in the Body Measures table.", "completion": "SELECT COUNT(*) FROM P_BMX WHERE BMXWT IS NOT NULL AND BMXHT IS NOT NULL AND BMIHEAD IS NOT NULL AND BMIARMC IS NOT NULL AND BMIARML IS NOT NULL AND BMIHIP IS NOT NULL AND BMIWAIST IS NOT NULL AND BMIHT IS NOT NULL AND BMILEG IS NOT NULL AND BMIRECUM IS NOT NULL AND BMXARMC IS NOT NULL AND BMXARML IS NOT NULL AND BMXBMI IS NOT NULL AND BMXHEAD IS NOT NULL AND BMXHIP IS NOT NULL AND BMXWT IS NOT NULL AND SEQN IS NOT NULL;"}
{"prompt": "Retrieve the names of patients who have the same arm circumference value in the Body Measures table.", "completion": "SELECT P_DEMO.name FROM P_DEMO JOIN P_BMX ON P_DEMO.SEQN = P_BMX.SEQN WHERE P_BMX.BMXARMC = (SELECT BMXARMC FROM P_BMX GROUP BY BMXARMC HAVING COUNT(*) > 1);"}
{"prompt": "List the names and ages of patients who have a BMI greater than 30 and a diagnosis of 'Hypertension' in the Medical Condition table.", "completion": "SELECT P_DEMO.name, P_DEMO.age FROM P_DEMO JOIN P_MCQ ON P_DEMO.SEQN = P_MCQ.SEQN WHERE P_MCQ.condition_name = 'Hypertension' AND P_BMX.BMXBMI > 30;"}
{"prompt": "Retrieve the top 3 patients with the highest BMI values for each BMI category in the Body Measures table.", "completion": "WITH RankedPatients AS (SELECT SEQN, BMXBMI, BMDBMIC, ROW_NUMBER() OVER (PARTITION BY BMDBMIC ORDER BY BMXBMI DESC) AS Rank FROM P_BMX) SELECT SEQN, BMXBMI, BMDBMIC FROM RankedPatients WHERE Rank <= 3;"}
{"prompt": "Retrieve the count of participants born in the United States from the Demographics table.", "completion": "SELECT COUNT(*) FROM P_DEMO WHERE DMDBORN4 = '1';"}
{"prompt": "Find the average age of female participants from the Demographics table.", "completion": "SELECT AVG(RIDAGEYR) FROM P_DEMO WHERE RIAGENDR = '2';"}
{"prompt": "List the top 5 countries of birth with the highest participant counts from the Demographics table.", "completion": "SELECT DMDBORN4, COUNT(*) AS ParticipantCount FROM P_DEMO GROUP BY DMDBORN4 ORDER BY ParticipantCount DESC LIMIT 5;"}
{"prompt": "Retrieve the ratio of family income to poverty (INDFMPIR) for participants aged 30 or older from the Demographics table.", "completion": "SELECT INDFMPIR FROM P_DEMO WHERE RIDAGEYR >= 30;"}
{"prompt": "Find the count of participants with missing education level (DMDEDUC2) values from the Demographics table.", "completion": "SELECT COUNT(*) FROM P_DEMO WHERE DMDEDUC2 = '.';"}
{"prompt": "List the distinct race/Hispanic origin (RIDRETH1) categories and the count of participants in each category from the Demographics table.", "completion": "SELECT RIDRETH1, COUNT(*) AS ParticipantCount FROM P_DEMO GROUP BY RIDRETH1;"}
{"prompt": "Retrieve the count of male and female participants from the Demographics table.", "completion": "SELECT RIAGENDR, COUNT(*) AS ParticipantCount FROM P_DEMO GROUP BY RIAGENDR;"}
{"prompt": "Find the average length of time in the US (DMDYRUSZ) for participants who used an interpreter in the MEC Interview (MIAINTRP = '1') from the Demographics table.", "completion": "SELECT AVG(DMDYRUSZ) FROM P_DEMO WHERE MIAINTRP = '1';"}
{"prompt": "List the distinct language of Family Interview (FIALANG) and the count of participants for each language from the Demographics table.", "completion": "SELECT FIALANG, COUNT(*) AS ParticipantCount FROM P_DEMO GROUP BY FIALANG;"}
{"prompt": "Retrieve the count of participants who used a proxy in the Family Interview (FIAPROXY = '1') from the Demographics table.", "completion": "SELECT COUNT(*) FROM P_DEMO WHERE FIAPROXY = '1';"}
{"prompt": "Find the count of participants with a proxy used in the MEC Interview (MIAPROXY = '1') and having a marital status of 'Married/Living with Partner' (DMDMARTZ = '1') from the Demographics table.", "completion": "SELECT COUNT(*) FROM P_DEMO WHERE MIAPROXY = '1' AND DMDMARTZ = '1';"}
{"prompt": "Retrieve the maximum respondent sequence number (SEQN) from the Demographics table.", "completion": "SELECT MAX(SEQN) FROM P_DEMO;"}
{"prompt": "List the distinct interview/examination status (RIDSTATR) categories and the count of participants in each category from the Demographics table.", "completion": "SELECT RIDSTATR, COUNT(*) AS ParticipantCount FROM P_DEMO GROUP BY RIDSTATR;"}
{"prompt": "Find the count of participants who were pregnant at the time of the exam (RIDEXPRG = '1') from the Demographics table.", "completion": "SELECT COUNT(*) FROM P_DEMO WHERE RIDEXPRG = '1';"}
{"prompt": "Retrieve the count of participants in each 6-month time period (RIDEXMON) from the Demographics table.", "completion": "SELECT RIDEXMON, COUNT(*) AS ParticipantCount FROM P_DEMO GROUP BY RIDEXMON;"}
{"prompt": "Find the count of participants whose language of ACASI Interview (AIALANGA) is 'Spanish' from the Demographics table.", "completion": "SELECT COUNT(*) FROM P_DEMO WHERE AIALANGA = '2';"}
{"prompt": "Retrieve the average age (RIDAGEYR) of participants born outside the United States (DMDBORN4 = '2') from the Demographics table.", "completion": "SELECT AVG(RIDAGEYR) FROM P_DEMO WHERE DMDBORN4 = '2';"}
{"prompt": "List the distinct marital status (DMDMARTZ) categories and the count of participants in each category for participants aged 50 or older from the Demographics table.", "completion": "SELECT DMDMARTZ, COUNT(*) AS ParticipantCount FROM P_DEMO WHERE RIDAGEYR >= 50 GROUP BY DMDMARTZ;"}
{"prompt": "Retrieve the maximum ratio of family income to poverty (INDFMPIR) for participants born in the United States (DMDBORN4 = '1') from the Demographics table.", "completion": "SELECT MAX(INDFMPIR) FROM P_DEMO WHERE DMDBORN4 = '1';"}
{"prompt": "Find the count of participants with a missing interpreter status in the SP Interview (SIAINTRP = '.') from the Demographics table.", "completion": "SELECT COUNT(*) FROM P_DEMO WHERE SIAINTRP = '.';"}
{"prompt": "List the distinct language of MEC Interview (MIALANG) and the count of participants for each language for participants aged 60 or older from the Demographics table.", "completion": "SELECT MIALANG, COUNT(*) AS ParticipantCount FROM P_DEMO WHERE RIDAGEYR >= 60 GROUP BY MIALANG;"}
{"prompt": "Retrieve the count of participants who did not use a proxy in the Family Interview (FIAPROXY = '2') and were born in the United States (DMDBORN4 = '1') from the Demographics table.", "completion": "SELECT COUNT(*) FROM P_DEMO WHERE FIAPROXY = '2' AND DMDBORN4 = '1';"}
{"prompt": "Find the count of participants with a race/Hispanic origin (RIDRETH1) of 'Mexican American' (RIDRETH1 = '1') and an interview/examination status (RIDSTATR) of 'Both interviewed and MEC examined' (RIDSTATR = '2') from the Demographics table.", "completion": "SELECT COUNT(*) FROM P_DEMO WHERE RIDRETH1 = '1' AND RIDSTATR = '2';"}
{"prompt": "Retrieve the minimum respondent sequence number (SEQN) for participants with a proxy used in the SP Interview (SIAPROXY = '1') from the Demographics table.", "completion": "SELECT MIN(SEQN) FROM P_DEMO WHERE SIAPROXY = '1';"}
{"prompt": "List the distinct data release cycles (SDDSRVYR) and the count of participants in each cycle for participants aged 70 or older from the Demographics table.", "completion": "SELECT SDDSRVYR, COUNT(*) AS ParticipantCount FROM P_DEMO WHERE RIDAGEYR >= 70 GROUP BY SDDSRVYR;"}
{"prompt": "Find the count of participants with a masked variance pseudo-PSU (SDMVPSU) of '3' from the Demographics table.", "completion": "SELECT COUNT(*) FROM P_DEMO WHERE SDMVPSU = '3';"}
{"prompt": "Retrieve the average full sample interview weight (WTINTPRP) for participants born outside the United States (DMDBORN4 = '2') from the Demographics table.", "completion": "SELECT AVG(WTINTPRP) FROM P_DEMO WHERE DMDBORN4 = '2';"}
{"prompt": "Find the count of participants with a full sample MEC exam weight (WTMECPRP) greater than 100,000 from the Demographics table.", "completion": "SELECT COUNT(*) FROM P_DEMO WHERE WTMECPRP > 100000;"}
{"prompt": "Select the first 10 patients from our demographics table", "completion": "SELECT TOP 10 * FROM P_DEMO"}
{"prompt": "Create a model named DemographicsPrediction to predict the language of ACASI Interview based on age and marital status from the Demographics table.", "completion": "CREATE MODEL DemographicsPrediction PREDICTING (AIALANGA) FROM P_DEMO TRAIN MODEL DemographicsPrediction VALIDATE MODEL DemographicsPrediction FROM P_DEMO SELECT * FROM INFORMATION_SCHEMA.ML_VALIDATION_METRICS;"}
{"prompt": "Select all rows from the NewDemographicsDataView where the model DemographicsPrediction predicts the language of audio computer assisted self interview (acasi) interview to be 'English'.", "completion": "SELECT * FROM NewDemographicsDataView WHERE PREDICT(DemographicsPrediction) = 'English';"}
{"prompt": "Create a model named BodyMeasuresPrediction to predict the BMI Category based on height and weight from the Body Measures table.", "completion": "CREATE MODEL BodyMeasuresPrediction PREDICTING (BMDBMIC) FROM P_BMX TRAIN MODEL BodyMeasuresPrediction VALIDATE MODEL BodyMeasuresPrediction FROM P_BMX SELECT * FROM INFORMATION_SCHEMA.ML_VALIDATION_METRICS;"}
{"prompt": "Select all rows from the NewBodyMeasuresDataView where the model BodyMeasuresPrediction predicts body weight category to be 'Normal weight'.", "completion": "SELECT * FROM NewBodyMeasuresDataView WHERE PREDICT(BodyMeasuresPrediction) = 'Normal weight';"}
